
// states
`define START_STATE0 0
`define START_STATE1 1

`define READ_STATUS_CMD_STATE0  2
`define READ_STATUS_CMD_STATE1 88
`define READ_STATUS_CMD_STATE2 89
`define READ_STATUS_STATE1  3
`define READ_STATUS_STATE2  4
`define READ_STATUS_STATE2a  62
`define READ_STATUS_STATE2b  63
`define READ_STATUS_STATE2c  64
`define READ_STATUS_STATE3  5
`define READ_STATUS_STATE4  6
`define READ_STATUS_STATE_WAIT0  7
`define READ_STATUS_STATE_WAIT1  8
`define READ_STATUS_STATE_WAIT2  34
`define READ_STATUS_STATE_WAIT3  35

`define RESET_STATE0 9
`define RESET_STATE1 10
`define RESET_STATE2 11
`define RESET_STATE3 12
`define RESET_STATE4 13

`define PROGRAM_PAGE_CMD_LATCH_STATE0  14
`define PROGRAM_PAGE_CMD_LATCH_STATE1  90
`define PROGRAM_PAGE_CMD_LATCH_STATE2  91
`define PROGRAM_PAGE_ADDR_LATCH_STATE0  15
`define PROGRAM_PAGE_ADDR_LATCH_STATE1  16
`define PROGRAM_PAGE_ADDR_LATCH_STATE2  36
`define PROGRAM_PAGE_INPUT_DATA_LATCH_STATE0  17
`define PROGRAM_PAGE_INPUT_DATA_LATCH_STATE1  18
`define PROGRAM_PAGE_CMD_LATCH_STATE3  19
`define PROGRAM_PAGE_CMD_LATCH_STATE4  92
`define PROGRAM_PAGE_CMD_LATCH_STATE5  93
`define PROGRAM_PAGE_BUSY_STATE0  20
`define PROGRAM_PAGE_BUSY_STATE1  21
`define PROGRAM_PAGE_CMD_LATCH_STATE6  22

`define ERASE_BLOCK_CMD_LATCH_STATE0  23
`define ERASE_BLOCK_CMD_LATCH_STATE1  94
`define ERASE_BLOCK_CMD_LATCH_STATE2  95
`define ERASE_BLOCK_ADDR_LATCH_STATE0  24
`define ERASE_BLOCK_CMD_LATCH_STATE3 25
`define ERASE_BLOCK_CMD_LATCH_STATE4 96
`define ERASE_BLOCK_CMD_LATCH_STATE5 97
`define ERASE_BLOCK_BUSY_STATE0 26
`define ERASE_BLOCK_BUSY_STATE1 27
`define ERASE_BLOCK_CMD_LATCH_STATE6 28

`define INIT_STATE0 29
`define INIT_STATE1 30

// `define CMD_LATCH_STATE0 31
/*
`define CMD_LATCH_STATE1 32
`define CMD_LATCH_STATE2 33
*/
//32, 33 open

`define READ_PAGE_CMD_LATCH_STATE0  37
`define READ_PAGE_CMD_LATCH_STATE1  98
`define READ_PAGE_CMD_LATCH_STATE2  99
`define READ_PAGE_ADDR_LATCH_STATE0  38
`define READ_PAGE_CMD_LATCH_STATE3  39
`define READ_PAGE_CMD_LATCH_STATE4  100
`define READ_PAGE_CMD_LATCH_STATE5  101
`define READ_PAGE_WAIT_STATE0 40
`define READ_PAGE_WAIT_STATE1 41
`define READ_PAGE_WAIT_STATE2 42
`define READ_PAGE_WAIT_STATE3 43
`define READ_PAGE_WAIT_STATE4 44
`define READ_PAGE_PREPARE 45
`define READ_PAGE_OUTPUT_DATA_LATCH_STATE0 46
`define READ_PAGE_OUTPUT_DATA_LATCH_STATE1 47

//48, 49 open

`define OUTPUT_DATA_LATCH_STATE0  50
`define OUTPUT_DATA_LATCH_STATE1  51
`define OUTPUT_DATA_LATCH_STATE2  52
`define OUTPUT_DATA_LATCH_STATE3  53
`define OUTPUT_DATA_LATCH_STATE4  54
`define OUTPUT_DATA_LATCH_STATE5  55
`define OUTPUT_DATA_LATCH_STATE6  56
`define OUTPUT_DATA_LATCH_STATE7  57
`define OUTPUT_DATA_LATCH_STATE8  58
`define OUTPUT_DATA_LATCH_STATE9  59
`define OUTPUT_DATA_LATCH_STATE10  60
`define OUTPUT_DATA_LATCH_STATE11  61

//65 open

`define DATA_ACCESS_STATE0 66
`define DATA_ACCESS_STATE1 67

// `define ADDR_LATCH_STATE0  68
`define ADDR_LATCH_STATE1  69
`define ADDR_LATCH_STATE2  70
`define ADDR_LATCH_STATE3  71
`define ADDR_LATCH_STATE4  72
`define ADDR_LATCH_STATE5  73
`define ADDR_LATCH_STATE6  74
`define ADDR_LATCH_STATE7  75
`define ADDR_LATCH_STATE8  76
`define ADDR_LATCH_STATE9  77

`define INPUT_DATA_LATCH_STATE0  78
`define INPUT_DATA_LATCH_STATE1  79
`define INPUT_DATA_LATCH_STATE2  80
`define INPUT_DATA_LATCH_STATE3  81
`define INPUT_DATA_LATCH_STATE4  82
`define INPUT_DATA_LATCH_STATE5  83
`define INPUT_DATA_LATCH_STATE6  84
`define INPUT_DATA_LATCH_STATE7  85
`define INPUT_DATA_LATCH_STATE8  86
`define INPUT_DATA_LATCH_STATE9  87

//102 to 127 open
`define WAIT_STATE 105

//NOTE:  If you need states with numbers greater than 127, you need to increase related reg sizes.


////////////////////////////////////////////////////////////////////////////////////////

// commands
`define  RESET_CMD                   0
`define  READ_STATUS_CMD      1
`define  BLOCK_ERASE_CMD      2
`define  PROGRAM_PAGE_CMD  3
`define  ERASE_BLOCK_CMD      4
`define  READ_PAGE_CMD          5
//need to increase CMD wire bits if increased past 7
